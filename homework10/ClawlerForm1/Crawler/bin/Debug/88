<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin-when-crossorigin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>adouwt - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=zS6-e1bxywlu3kpHvpr1J6MySwya3ztFtEnS7RYQ0Fk" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=2uJkpdACLVfstRQ7zeCFK19brTwKuDEaNBLgKz9nm3A" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/adouwt/custom.css?v=lo8brJo0eAoWnc4XkfxhUwCxJeQ=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=DwDRKMd1bmjnJZ4iQqrTCO9QLlYb6OZaUAzHoHIIihg" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/adouwt/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/adouwt/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/adouwt/wlwmanifest.xml" />
    <script>
        var currentBlogId = 331017;
        var currentBlogApp = 'adouwt';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'CodingLife';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=2Mic1VLeHXarpdzASbXqFMIMVLEBiWXNO5yiTHUcmhw"></script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;v=20200504"></script>
    
</head>
<body class="has-navbar">
    <a name="top"></a>
    <div id="top_nav" class="navbar forpc">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding"><a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a></li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a class="navbar-user-info navbar-blog" href="https://i.cnblogs.com/EditPosts.aspx?opt=1" alt="写随笔" title="写随笔">
                        <img id="new_post_icon" class="navbar-icon" src="/images/aggsite/newpost.svg" alt="写随笔" />
                    </a>
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=J0WS2P2iPgaIVgXxcAhliw4AFZIpaTWxtdoNAv9eiCA" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" id="navbar_lite_mode_toggle" title="简洁模式会使用简洁款皮肤显示所有博客">
    简洁模式 <img id="navbar_lite_mode_on" src="/images/lite-mode-check.svg" class="hide" /><span id="navbar_lite_mode_spinner" class="hide">...</span>
</a>
                            <a href="javascript:void(0)" onclick="account.logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="javascript:void(0);" onclick="account.login()">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/adouwt/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/adouwt/">🈚️派散人</a>
</h1>
<h2></h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/adouwt/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/adouwt">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/adouwt/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<div id="blog_stats_place_holder"><script>loadBlogStats();</script></div>
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2021/05/07.html">2021年5月7日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/14742503.html">
    <span>
        redux和mobx入门使用
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：redux和mobx入门使用 项目涉及技术 公共插件 create-react-app react-dom react-router react-router-dom react-hook redux react-redux 大概实现功能 组件调用 路由跳转 接口调用 状态管理 代码示例说明 red        <a href="https://www.cnblogs.com/adouwt/p/14742503.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-07 20:24
adouwt
<span data-post-id="14742503" class="post-view-count">阅读(24)</span> 
<span data-post-id="14742503" class="post-comment-count">评论(0)</span> 
<span data-post-id="14742503" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14742503" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
            <div class="postSeparator"></div>
        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/14741998.html">
    <span>
        markdown 的使用技巧
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1.项目目录层级结构 npm i tree-node-cli -g 全局安装 命令 -L 是确定要几级目录，-I是排除哪个文件夹下的，然后我是要在README里面生成项目结构树 先cd到需要生成目录的文件夹下，然后输入：tree -L 4 -I &amp;quot;node_modules&amp;quot; &amp;gt; README.md        <a href="https://www.cnblogs.com/adouwt/p/14741998.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-05-07 17:41
adouwt
<span data-post-id="14741998" class="post-view-count">阅读(5)</span> 
<span data-post-id="14741998" class="post-comment-count">评论(0)</span> 
<span data-post-id="14741998" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14741998" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2021/04/25.html">2021年4月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/14702718.html">
    <span>
        js的13种继承
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：js继承的13种方式 1、原型链法 代码示例 Child.prototype = new Parent(); 所属模式： 1、基于构造器工作方式 2、使用原型链模式 技术注解 1、默认继承机制 2、提示：我们可以将方法与属性集中可重用的部分迁移到原型链中，而将不可重用的那部分设置为对象的自身属性 详        <a href="https://www.cnblogs.com/adouwt/p/14702718.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2021-04-25 23:47
adouwt
<span data-post-id="14702718" class="post-view-count">阅读(59)</span> 
<span data-post-id="14702718" class="post-comment-count">评论(0)</span> 
<span data-post-id="14702718" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14702718" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2020/12/27.html">2020年12月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/14199543.html">
    <span>
        React Hook 入门使用
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：React Hook 是什么 1、没有比官网说的更好的 HOOK 1. React Hook 官方 2. 用我们自己的话说，它是一个钩子函数，用来处理组件间的状态的一系列方法，暂时理解为一个高阶函数吧，可以替换 class 类的写法，省去生命周期的写法。 3. hook 一直说的副作用到底是啥？ 之        <a href="https://www.cnblogs.com/adouwt/p/14199543.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-12-27 23:24
adouwt
<span data-post-id="14199543" class="post-view-count">阅读(217)</span> 
<span data-post-id="14199543" class="post-comment-count">评论(0)</span> 
<span data-post-id="14199543" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=14199543" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2020/09/13.html">2020年9月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/13661061.html">
    <span>
        双向绑定数据的实现（new Proxy 版本）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：之前有用 Object.defineProperty 实现了一个双向绑定，过于繁琐，这是 基于 Proxy 实现了一版，也优化了模版渲染的部分，代码更简洁。 调用 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta        <a href="https://www.cnblogs.com/adouwt/p/13661061.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-09-13 13:12
adouwt
<span data-post-id="13661061" class="post-view-count">阅读(100)</span> 
<span data-post-id="13661061" class="post-comment-count">评论(0)</span> 
<span data-post-id="13661061" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13661061" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2019/07/21.html">2019年7月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/11207143.html">
    <span>
        写给后端同学的vue
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：文章内，图片很多，占据了一定的篇幅。有写后台的哥们说，vue怎么写，怎么新建一个vue项目，然后我想了想，觉得写一个面向后台同学的vue教程也是有必要，文章中几乎没讲css和vue细节处理的相关内容，减少接受不必要的信息量，降低vue的学习成本。如果有不清楚的地方，可以私信联系我，有不对不合理之处，        <a href="https://www.cnblogs.com/adouwt/p/11207143.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-07-21 13:25
adouwt
<span data-post-id="11207143" class="post-view-count">阅读(1951)</span> 
<span data-post-id="11207143" class="post-comment-count">评论(2)</span> 
<span data-post-id="11207143" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11207143" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2019/06/28.html">2019年6月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/11102839.html">
    <span>
        express 中间件的理解
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：nodejs(这指express） 中间件 铺垫 ： 一个请求发送到服务器，要经历一个生命周期，服务端要： 监听请求 解析请求 响应请求，服务器在处理这一过程的时候，有时候就很复杂了，将这些复杂的业务拆开成一个个子部分，子部分就是一个个中间件。对于处理请求来说，在响应发出之前，可以对请求和该级响应做        <a href="https://www.cnblogs.com/adouwt/p/11102839.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-06-28 15:18
adouwt
<span data-post-id="11102839" class="post-view-count">阅读(1525)</span> 
<span data-post-id="11102839" class="post-comment-count">评论(0)</span> 
<span data-post-id="11102839" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11102839" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2019/05/29.html">2019年5月29日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/10947047.html">
    <span>
        RN 从上手到“放弃”
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：RN 从上手到“放弃” 前言： react native，相对于最近&#128293;的飞起的flutter，不算是一个新技术，2015年Facebook 开源，到现在已经4 5 个年头，一直在维护当中，但是至今未发布 v1 版本，目前已经更新到0.59。 该技术目标： 跨平台实现原生应用。 GitHub sta        <a href="https://www.cnblogs.com/adouwt/p/10947047.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-05-29 23:39
adouwt
<span data-post-id="10947047" class="post-view-count">阅读(3123)</span> 
<span data-post-id="10947047" class="post-comment-count">评论(1)</span> 
<span data-post-id="10947047" class="post-digg-count">推荐(1)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10947047" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2019/05/23.html">2019年5月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/10911495.html">
    <span>
        react-native的技巧
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：按钮定制 給图片添加点击事件 &amp;lt;TouchableOpacity onPress={this.lookAlbum} style={{flex: 0, height: 40, width: 40, borderRadius: 5, alignSelf: &amp;#39;center&amp;#39;,}}&amp;gt; &amp;lt;Image styl        <a href="https://www.cnblogs.com/adouwt/p/10911495.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-05-23 14:00
adouwt
<span data-post-id="10911495" class="post-view-count">阅读(135)</span> 
<span data-post-id="10911495" class="post-comment-count">评论(0)</span> 
<span data-post-id="10911495" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10911495" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/adouwt/archive/2019/04/20.html">2019年4月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/adouwt/p/10743379.html">
    <span>
        react 常见api 使用（长期更新）
    </span>
    



</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：1、父子通信 1.1 父-子 props 父组件： class myPage extends React.Component { render() { return ( &amp;lt;div&amp;gt; {/* 子组件 自定义page 是子组件要接受的属性 mypage是要传递的内容*/} &amp;lt;TabBar page=&amp;quot;m        <a href="https://www.cnblogs.com/adouwt/p/10743379.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-04-20 23:34
adouwt
<span data-post-id="10743379" class="post-view-count">阅读(1076)</span> 
<span data-post-id="10743379" class="post-comment-count">评论(0)</span> 
<span data-post-id="10743379" class="post-digg-count">推荐(0)</span> 
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10743379" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/adouwt/default.html?page=2">
        下一页
    </a>

    </div>    
</div>






<script>
    updatePostStats(
        $(".post-view-count").map(function () { return this.dataset.postId }).get(),
        function(id, count) { $(".post-view-count[data-post-id=" + id + "]").text("阅读(" + count + ")") },
        function(id, count) { $(".post-comment-count[data-post-id=" + id + "]").text("评论(" + count + ")") },
        function(id, count) { $(".post-digg-count[data-post-id=" + id + "]").text("推荐(" + count + ")") });
</script>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_c3"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2021 adouwt
<br /><span id="poweredby">Powered by .NET 5.0 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    

    <input type="hidden" id="antiforgery_token" value="CfDJ8L-rpLgFVEJMgssCVvNUAjuRYXEY4INSGwWs1BQ3CigZtxb6nsORafGjLxNK2QDxpkAvFM0iW23Xh4iClAkazUJ7y2m-svWjE_vIDxqh3d3j3fIAtHc_L-r6digaswOw_-KT4B0G4cJd5lTQMdL9mqM" />
</body>
</html>
